#ifndef __MD5_H__
#define __MD5_H__

#include <stdint.h>
#include <string.h>

#define MD5_SIZE 16
#define MD5_DATA_SIZE 32 // the first 5 blocks + unique card ID
#define MD5_KEY_SIZE 69
#define KEY_1 {\
				0x70,0x65,0x69,0x62,0x61,0x68,0x25,0x70,\
				0x68,0x34,0x73,0x65,0x69,0x53,0x36,0x65,\
				0x69,0x52,0x61,0x69,0x77,0x24,0x61\
				}
#define KEY_2 {\
				0x61,0x68,0x77,0x61,0x75,0x58,0x37,0x4f,\
				0x65,0x5c,0x73,0x68,0x6f,0x68,0x38,0x6d,\
				0x61,0x68,0x2a,0x64,0x61,0x68,0x7e\
				}
#define KEY_3 {\
				0x03,0x07,0x15,0xD2,0x71,0x4C,0x39,0x01,\
				0x0A,0x0D,0xFD,0x00,0x02,0x37,0x04,0xFC,\
				0x00,0x0F,0x17,0x1B,0x2E,0x4D,0x02\
				}
/* UINT4 defines a four byte word */
typedef uint32_t UINT4;

/* MD5 context. */
struct md5_ctx {
  UINT4 state[4];                                   /* state (ABCD) */
  UINT4 count[2];        /* number of bits, modulo 2^64 (lsb first) */
  unsigned char buffer[64];                         /* input buffer */
};

typedef struct md5_ctx MD5_CTX;

void MD5_Init(struct md5_ctx *context);
void MD5_Update(struct md5_ctx *context, const unsigned char *input, unsigned int inputLen);
void MD5_Final(unsigned char md5[16], struct md5_ctx *context);

#endif
